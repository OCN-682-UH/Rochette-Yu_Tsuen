---
title: "Week 13 - Tidy Tuesday 4"
author: "Keanu Rochette"
format: 
  dashboard:
    theme: 
      light: yeti
      dark: superhero
    orientation: columns
    nav-buttons:
      icon: github
      href: https://github.com/keanuryt
logo: images/silbiger-logo.jpg
logo-alt: Silbiger Lab Logo
knitr:
  opts_chunk:
    fig.path: "outputs/"
---


```{r}
# Load the libraries
library(tidyverse)
library(here)
library(multcompView) #required for ANOVA visualisation
library(viridis)
library(gt)
```

```{r}
#Load functions : anova_nunu()
source(here("Functions", "functions.R"))
```

```{r}
#Load the data 
tuesdata <- tidytuesdayR::tt_load('2024-11-19')

episode_metrics <- tuesdata$episode_metrics
```

## Column 1 - Left Column: Boxplot and Linear Regression

### Row 1- Boxplot {height="60%"}

<!-- Plot a box plot with will take the upper 60% of this column -->

```{r, echo=TRUE, include= FALSE}
#using the anova function I created to perform an ANOVA and a Tukey's test
#include = FALSE because it will show in the dashboard otherwise
df<- episode_metrics %>% mutate(season = as.factor(season))

anova_nunu(df, season, avg_length)
```

```{r boxplot}
#| title: Distribution of Episode Length by Season 
# Plotting the boxplot
episode_metrics %>% 
  mutate(season = factor(season)) %>% 
  group_by(season) %>% 
  ggplot(aes(x = season, y = avg_length ))+
  geom_boxplot(aes( fill = season))+
   geom_text(data =Tk, aes(x= season, y = quant, label = cld),
            size = 4, vjust = -1, hjust =-0.5)+
  labs(
       x = "Season",
       y = "Episode Length (min)",
       fill = "Season") +
  theme_bw() + 
  theme(plot.title = element_text(size=14, face = "bold"), 
        plot.subtitle = element_text(size=12),
        axis.title = element_text(size = 12, face = "bold"),
        axis.text = element_text(size = 12),
        strip.text.x = element_text(size = 12, face = "bold"),
        legend.title=element_text(size=12, face = "bold"),
        legend.text=element_text(size=12),
        legend.position = "none",
        panel.background = element_rect(fill = "azure1"))
```

### Row 2 - Regression {height="40%"}

```{r regression, fig.height=6, fig.width=16}
#| title: Correlation between Episode Length and Question Ratio
#| message: false

# Plotting the linear regression 
episode_metrics %>% 
  mutate(season = as.factor(season)) %>% 
ggplot(aes(avg_length, question_ratio)) +
  geom_point(aes(color = season)) +
  geom_smooth(method = 'lm')+
  labs(
       x = "Episode Length (min)",
       y = "Question Ratio",
       color = "Season") +
  theme_bw() + 
  theme(
        axis.title = element_text(size = 16, face = "bold"),
        axis.text = element_text(size = 16),
        strip.text.x = element_text(size = 16, face = "bold"),
        legend.title=element_text(size=16, face = "bold"),
        legend.text=element_text(size=16),
        panel.background = element_rect(fill = "azure1"))+
  scale_color_viridis(discrete =T)
 
```


## Columns 2- Right Column: Text, Value Boxes and Table

### Row 1 {height="20%"}

<!---This block allows to show a markdown text on the dashboard--->

::: {.card title = "Week 13 - Learning Outcome"}
This week, I wanted to design a **Quarto Dashboard**.  
It's a very awesome and approachable tool to use to summarize data.  
However, the Quarto file (.qmd) requires all the elements used and generated by the file to be in the same folder as the .qmd file.  
As a result my repository organization is slightly different this week.
:::

### Row 2 - Value Boxes {height="30%"} 
<!--I will plot 3 value boxes to highlight notable stuff about the data.
That row will take 30% of the column space.-->
```{r}
#| label: calculate_values

# Calculating the values that will be displayed on the dashboard
season_num <- episode_metrics %>% 
  mutate(max = max(season)) %>%  
  select(max) %>% distinct() %>% 
  pull(max)

avg_length <- episode_metrics %>% 
  mutate(mean = round(mean(avg_length)), 1) %>%  
  select(mean) %>% distinct() %>% 
  pull(mean)

avg_unique_wd <- episode_metrics %>% 
  mutate(mean = ceiling(mean(unique_words)))%>%  
  select(mean) %>% distinct() %>% 
  pull(mean)

```

```{r}
#| content: valuebox
#| title: Number of Seasons
#| icon: laptop
#| color: blue
list(value= paste(season_num))
```

```{r}
#| content: valuebox
#| title: Average Episode Time
#| icon: clock
#| color: yellow
list(value= paste(avg_length, "minutes"))
```

```{r}
#| content: valuebox
#| title: Number of Words Used per Episodes
#| icon: alphabet-uppercase
#| color: green
list(value= paste(avg_unique_wd))
```


### Row 3- Summary table {height="60%"}
<!--This row will be used for a summary table and will take 60% of the column space.-->
```{r summary table}
#| title: Metrics Summary of Bob's Burger
# Plotting the gt table
episode_metrics %>% 
  group_by(season) %>% 
  summarize(
    Average_Length = round(mean(avg_length, na.rm = T),1),
    Unique_Words = round(mean(unique_words, na.rm = T),1),
    question_ratio = round(mean(question_ratio, na.rm = T),1),
    exclamation_ratio = round(mean(exclamation_ratio, na.rm = T),1)
  ) %>% 
  gt(rowname_col = "season") %>% 
  tab_header(title = "Bob's Burger by Numbers",
             subtitle= "Evaluated by Season")  %>%
  cols_label(
    season = "Season",
    Average_Length = "Average Length (min)",
    Unique_Words = "Unique Words",
    question_ratio = "Question Ratio",
    exclamation_ratio = "Exclamation Ratio"
  ) %>% 
  tab_source_note("Source: Tidy Tuesday November 19, 2024") %>% 
  cols_align(
    align = "center",
    columns = everything())
  
```


